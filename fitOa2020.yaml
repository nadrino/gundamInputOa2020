# -------------------------------
# Inputs for BANFF-like Fit - OA2020
# -------------------------------

fit: true # can be disabled with -d
scanParameters: false # can be triggered with --scan
generateOneSigmaPlots: false # can be enabled with --one-sigma
generateSamplePlots: true

fitterEngineConfig:

  monitorRefreshRateInMs: 5000

  # Scanning parameters
  scanConfig: "inputs/fitter/configScan.yaml"

  # Fixing parameters that don't have any effect on the sample.
  # Sometimes Minuit has trouble computing the Hessian matrix (non-positive definite)
  # while too many parameters are
  fixGhostFitParameters: true
  # If the stat chi2 don't move over this value, the parameter will be fixed
  ghostParameterDeltaChi2Threshold: 0.01
  fixGhostEigenParmetersAfterFirstRejected: true

  # Apply gain on the determination of the step size for the fitter
#  scaleParStepWithChi2Response: true # default :false. use 1 sigma instead
#  parStepGain: 0.1

  # Throw (correlated) parameters before making the fit
  # This helps Minuit converge while doing an Asimov fit when too many fit parameters are involved
  # Pushing the parameter away from the minimum allow Minuit to better scan the area
  throwMcBeforeFit: false
  # Some fit parameter may have huge prior, no need to push everybody at 1sigma in average
  # ThrowPar = ParPrior +  throwMcBeforeFitGain * randomGaus(0, 1sigma)
  throwMcBeforeFitGain: 0.1

  # false by default
  restoreStepSizeBeforeHesse: false

  # Fitter engine config
  minimizerConfig: "inputs/fitter/configMinimizer.yaml"

  propagatorConfig:
    showEventBreakdown: true # default: true
    showEventBreakdownBeforePrior: true # default: false

    dataSetList:            "./inputs/datasets/configDataSets.yaml"
    fitSampleSetConfig:     "./inputs/samples/configSamples.yaml"
    parameterSetListConfig: "./inputs/parameters/configParSet.yaml"
    plotGeneratorConfig:    "./misc/commonConfigPlotGenerator.yaml"
